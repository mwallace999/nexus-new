let express,http,Server,cors;_4aa‍.w("express",[["default",["express"],function(v){express=v}]]);_4aa‍.w("http",[["default",["http"],function(v){http=v}]]);_4aa‍.w("socket.io",[["Server",["Server"],function(v){Server=v}]]);_4aa‍.w("cors",[["default",["cors"],function(v){cors=v}]]);




const app = express();
const server = http.createServer(app);
const io = new Server(server);

// Configure CORS to allow requests from specific origins
app.use(
  cors({
    origin: 'http://localhost:8080', // Replace with the origin of your Vue.js app
    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',
    allowedHeaders: ['Content-Type', 'Authorization'],

  })
);
pp.use(
  cors({
    origin: 'http://localhost:8080', // Replace with the origin of your Vue.js app
    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',
    allowedHeaders: ['Content-Type', 'Authorization'],

  })
);

// Socket.io event handling
io.on('connection', (socket) => {
  console.log('A user connected');

  // Handle a specific event (e.g., when a player makes a move)
  socket.on('makeMove', (moveData) => {
    // Broadcast the move to all connected clients, including the sender
    _4aa‍.g.console.log('MOVE DATA RECEIVED!!!', moveData)
    io.emit('moveReceived', moveData);
  });

  socket.on('disconnect', () => {
    console.log('A user disconnected');
  });
});

// Start the server
const port = process.env.PORT || 3000;
server.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});