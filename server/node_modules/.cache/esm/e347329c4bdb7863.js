let express,http,Server,generateBoard;_4bd‍.w("express",[["default",["express"],function(v){express=v}]]);_4bd‍.w("http",[["default",["http"],function(v){http=v}]]);_4bd‍.w("socket.io",[["Server",["Server"],function(v){Server=v}]]);_4bd‍.w("./controller",[["generateBoard",["generateBoard"],function(v){generateBoard=v}]]);




const app = express();
const server = http.createServer(app);
const io = new Server(server);

// SOCKET.IO HANDLING
io.on('connection', (socket) => {
    console.log('A user connected');

    socket.on('disconnect', () => {
        console.log('A user disconnected');
    });

    socket.on('selectAction', (moveData) => {
        _4bd‍.g.console.log('MOVE DATA RECEIVED!!!', moveData)
        io.emit('newAction', moveData);
    });

    socket.on('generateBoard', (setup) => {
        const board = generateBoard(setup)
        io.emit('newBoard', board);
    });
  
});

// Start server
const port = process.env.PORT || 3000;
server.listen(port, () => {
    console.log(`Server is running on port ${port}`);
});

